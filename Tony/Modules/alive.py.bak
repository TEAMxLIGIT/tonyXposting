# alive.py

import asyncio
from datetime import datetime
from pyrogram import Client, filters, InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.types import Message
from config import api_id, api_hash, bot_token, owner_id

app = Client('userbot_session', api_id=api_id, api_hash=api_hash, bot_token=bot_token)

# Variable to keep track of whether the userbot should continue running
userbot_running = True

# Keep track of userbot start time
userbot_start_time = datetime.now()

@app.on_message(filters.regex(r'[.,/]') & filters.user(owner_id))
async def handle_alive_command(_, message: Message):
    global userbot_running

    if userbot_running and (message.text.startswith(',"/alive') or message.text.startswith('.alive')):
        await send_alive_message(message)

async def send_alive_message(message: Message):
    global userbot_start_time

    # Calculate userbot uptime
    uptime = datetime.now() - userbot_start_time
    uptime_str = str(uptime).split('.')[0]

    # Create an InlineKeyboardMarkup with support group and repo buttons
    keyboard = InlineKeyboardMarkup(
        [[
            InlineKeyboardButton("Support Group", url="https://t.me/sastatony"),
            InlineKeyboardButton("Repo", url="https://t.me/team_ligit")
        ]]
    )

    # Send the alive message
    alive_message = (
        f"**Userbot Status**\n\n"
        f"**Owner:** {owner_id}\n"
        f"**Pyrogram Version:** {app.pyrogram_version}\n"
        f"**Uptime:** {uptime_str}\n\n"
    )

    # Add telegraph .mp4 link below other information
    alive_message += "[Watch the Alive Video](https://telegra.ph/bhaii_link_dede-01-21)"

    await message.reply_text(
        alive_message,
        reply_markup=keyboard,
        parse_mode="markdown"
    )

if __name__ == "__main__":
    app.run()