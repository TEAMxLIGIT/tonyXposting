# spam.py

import asyncio
from pyrogram import Client, filters
from pyrogram.types import Message
from config import userbot_string_sessions, owner_id

# Create clients for each userbot session
userbot_clients = {session: Client(session) for session in userbot_string_sessions}

async def start_userbots():
    # Start each userbot
    for userbot_client in userbot_clients.values():
        await userbot_client.start()

async def stop_userbots():
    # Stop each userbot
    for userbot_client in userbot_clients.values():
        await userbot_client.stop()

@app.on_message(filters.regex(r'[.,/]') & filters.user(owner_id))
async def handle_limit_command(_, message: Message):
    await process_limit_command(message)

async def process_limit_command(message: Message):
    # Extract the message text after the command
    command_parts = message.text.split(' ')
    if len(command_parts) == 2:
        # Extract the limit from the command
        limit = int(command_parts[1])

        # Send the message to @SpamBot for each userbot
        for userbot_client in userbot_clients.values():
            await userbot_client.send_message('SpamBot', f'/start {limit}')

        # Reply with a confirmation
        await message.reply_text(f"Sent '/start {limit}' to @SpamBot for all userbots.")
    else:
        await message.reply_text("Invalid command format. Use ',"/limit <number>'.")
        
if __name__ == "__main__":
    app.loop.run_until_complete(start_userbots())
    app.run()
    app.loop.run_until_complete(stop_userbots())